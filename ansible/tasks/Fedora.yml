###############################
# Run as root
###############################

- name: Run tasks as root
  become: true
  block:
    - name: Change hostname
      ansible.builtin.hostname:
        name: "{{ my_hostname }}"

    - name: Set fact about primary disk device used by KDE Plasma
      ansible.builtin.shell: |
        set -o pipefail
        lsblk -o NAME,MAJ:MIN,TYPE | sed -n 's/^\([^ ]*\) *\([^:]*\):\([^ ]*\).*disk$/\1_(\2%3A\3)/p'
      changed_when: false
      register: primary_disk_device_number_kde_plasma

    - name: Disable weak dependencies
      community.general.ini_file:
        path: /etc/dnf/dnf.conf
        section: main
        option: install_weak_deps
        value: "false"
        mode: u=rw,g=r,o=r

    - name: Install packages
      ansible.builtin.dnf:
        name: "{{ dnf_packages + dnf_kde_packages + dnf_qt_packages + dnf_graphical_packages + dnf_gtk3_packages + dnf_gtk2_packages }}"

    - name: Import RPM Fusion GPG signature
      ansible.builtin.rpm_key:
        key: "{{ item }}"
      loop:
        - /usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-free-fedora-{{ ansible_distribution_version }}
        - /usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-nonfree-fedora-{{ ansible_distribution_version }}

    - name: Install rpmfusion repositories
      ansible.builtin.dnf:
        name: "{{ rpmfusion_repositories }}"

    - name: Import key for VS Code repository
      ansible.builtin.rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc

    - name: Add VS Code repository
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

    - name: Add Hashicorp repository
      ansible.builtin.yum_repository:
        name: hashicorp
        description: Hashicorp Stable - $basearch
        baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
        repo_gpgcheck: true
        gpgcheck: true
        gpgkey: https://rpm.releases.hashicorp.com/gpg

    - name: Install additional packages
      ansible.builtin.dnf:
        name: "{{ dnf_additional_packages }}"

    - name: Get package facts
      ansible.builtin.package_facts:

    - name: Switch to runlevel 5 by default (graphical.target)
      ansible.builtin.file:
        src: /lib/systemd/system/graphical.target
        dest: /etc/systemd/system/default.target
        state: link
        force: true

    - name: Disable mouse in mc
      ansible.builtin.copy:
        src: files/etc/profile.d/my-mc.sh
        dest: /etc/profile.d/
        mode: u=rwx,g=rx,o=rx

    - name: Add "ansible_user_id" user
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        comment: "Petr Ruzicka"
        groups: docker,libvirt,lp,printadmin,wireshark,wheel
        password: "{{ fedora_username_password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"
      no_log: true
      notify: Change LUKS key
      tags: secrets

    - name: Put private SSH keys for ssh sever to /etc/ssh/
      ansible.builtin.copy:
        src: files/etc/ssh/{{ item }}
        dest: /etc/ssh/{{ item }}
        owner: root
        group: ssh_keys
        mode: u=rw,g=r,o=
      loop:
        - ssh_host_ecdsa_key
        - ssh_host_ed25519_key
        - ssh_host_rsa_key
      tags: secrets

    - name: Put public SSH keys for ssh sever to /etc/ssh/
      ansible.builtin.copy:
        src: files/etc/ssh/{{ item }}
        dest: /etc/ssh/{{ item }}
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      loop:
        - ssh_host_ecdsa_key.pub
        - ssh_host_ed25519_key.pub
        - ssh_host_rsa_key.pub

    - name: Configure ssh client globally
      ansible.builtin.copy:
        src: files/etc/ssh/ssh_config.d/10-my_ssh.conf
        dest: /etc/ssh/ssh_config.d/10-my_ssh.conf
        mode: u=rw,g=r,o=r

    - name: Set format for history command
      ansible.builtin.copy:
        src: files/etc/profile.d/history_format.sh
        dest: /etc/profile.d/
        mode: u=rw,g=r,o=r

    - name: Tweak vim
      ansible.builtin.blockinfile:
        marker: '" {mark} ANSIBLE MANAGED BLOCK'
        dest: /etc/vimrc
        block: |
          set laststatus=2
          set statusline=%F%m%r%h%w\ (%{&ff}){\%Y}[%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}

    - name: Tweak logrotate (/etc/logrotate.conf)
      ansible.builtin.blockinfile:
        dest: /etc/logrotate.conf
        insertafter: "^create"
        block: |
          compress
          compresscmd /usr/bin/xz
          compressoptions -9
          uncompresscmd /usr/bin/unxz
          compressext .xz

    - name: Enable services during boot
      ansible.builtin.service:
        name: "{{ item }}"
        enabled: true
      loop: "{{ enable_boot_services }}"

    - name: Disable services during boot
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop: "{{ disable_boot_services }}"

    - name: Disable masked services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        masked: true
      loop: "{{ mask_services }}"

    - name: Enable Nested KVM
      ansible.builtin.replace:
        dest: /etc/modprobe.d/kvm.conf
        regexp: "^#options kvm_intel nested=1"
        replace: "options kvm_intel nested=1"
        mode: u=rw,g=r,o=r

    - name: Chnage kernel settings using sysctl
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/10-my.conf
      loop:
        - name: kernel.panic
          value: 10
        - name: net.ipv4.ip_forward
          value: 1
        - name: net.ipv4.conf.default.rp_filter
          value: 1

    - name: Change prompt in lftp
      ansible.builtin.replace:
        dest: /etc/lftp.conf
        regexp: "^#set prompt"
        replace: set prompt
        mode: u=rw,g=r,o=r

    - name: Configure dnf-automatic
      community.general.ini_file:
        path: /etc/dnf/automatic.conf
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - section: commands
          option: apply_updates
          value: "yes"
        - section: commands
          option: download_updates
          value: "yes"
        - section: emitters
          option: emit_via
          value: email
        - section: email
          option: email_from
          value: root@{{ ansible_fqdn }}
        - section: command_email
          option: email_from
          value: root@{{ ansible_fqdn }}

    # - name: Blacklist pcspkr kernel module
    #   kernel_blacklist:
    #     name: pcspkr
    #     blacklist_file: /etc/modprobe.d/blacklist-pcspkr.conf

    - name: Change libvirt-guests parameters
      community.general.ini_file:
        path: /etc/sysconfig/libvirt-guests
        no_extra_spaces: true
        section: null
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - option: ON_SHUTDOWN
          value: shutdown
        - option: SHUTDOWN_TIMEOUT
          value: 60
        - option: PARALLEL_SHUTDOWN
          value: 10

    - name: Chnage sddm config file (/etc/sddm.conf)
      community.general.ini_file:
        path: /etc/sddm.conf
        no_extra_spaces: true
        section: Autologin
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - option: Session
          value: plasma.desktop
        - option: User
          value: "{{ ansible_user_id }}"

    - name: Create cron.d entries
      ansible.builtin.cron:
        name: "{{ item.name }}"
        weekday: "{{ item.weekday }}"
        minute: "{{ item.minute }}"
        hour: "{{ item.hour }}"
        user: "{{ item.user }}"
        job: "{{ item.job }}"
        cron_file: "{{ item.cron_file }}"
        disabled: "{{ item.disabled }}"
      loop:
        - name: backup
          weekday: "*"
          minute: 0
          hour: 1
          ansible.builtin.user: "{{ ansible_user_dir }}"
          job: nice {{ ansible_user_dir }}/Documents/backups/backup.sh
          cron_file: backup
          disabled: true
          user: "{{ ansible_user_id }}"
      loop_control:
        label: "{{ item.name }} - {{ item.cron_file }}"

    - name: Create mount points
      ansible.builtin.file:
        path: "{{ item.name }}"
        state: directory
        mode: u=rwx,g=rx,o=rx
      loop: "{{ fstab_entries }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Add mount points to fstab
      ansible.posix.mount:
        name: "{{ item.name }}"
        src: "{{ item.src }}"
        fstype: "{{ item.fstype }}"
        boot: false
        opts: "{{ item.opts }}"
        state: present
      loop: "{{ fstab_entries }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Disable suspend when lid is closed
      community.general.ini_file:
        path: /etc/systemd/logind.conf
        section: Login
        option: HandleLidSwitch
        value: ignore
        mode: u=rw,g=r,o=r
      notify: Reload systemctl

    - name: Create /etc/systemd/journald.conf.d directory
      ansible.builtin.file:
        path: /etc/systemd/journald.conf.d
        state: directory
        mode: u=rwx,g=rx,o=rx

    - name: Forward journald to /dev/tty12
      community.general.ini_file:
        path: /etc/systemd/journald.conf.d/fw-tty12.conf
        no_extra_spaces: true
        section: Journal
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - option: ForwardToConsole
          value: "yes"
        - option: TTYPath
          value: /dev/tty12
        - option: MaxLevelConsole
          value: info
      notify: Reload systemctl

    - name: Configure journald
      community.general.ini_file:
        path: /etc/systemd/journald.conf.d/journal-size.conf
        section: Journal
        option: SystemMaxUse
        value: 50M
        mode: u=rw,g=r,o=r
      notify: Reload systemctl

    - name: Add loop module to load during boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/loop.conf
        content: loop
        mode: u=rw,g=r,o=r

    - name: Configuring NetworkManager to use randomized MAC-addresses
      community.general.ini_file:
        path: /etc/NetworkManager/conf.d/00-macrandomize.conf
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - section: device
          option: wifi.scan-rand-mac-address
          value: "yes"
        - section: connection
          option: wifi.cloned-mac-address
          value: preserve
        - section: connection
          option: connection.stable-id
          value: ${CONNECTION}/${BOOT}

    - name: Configure .bashrc for root
      ansible.builtin.blockinfile:
        dest: /root/.bashrc
        block: |
          PS1='\[\033[01;31m\]\h\[\033[01;34m\] \w #\[\033[00m\] '
          alias dos2unix="sed -i 's/\r$//' "
          alias unix2dos="awk 'sub(\"$\",\"\r\")' "
          alias md5sum_dir="rhash --md5 --recursive --percents --output=md5sum.md5 ." # DevSkim: ignore DS126858

    - name: Configure NTP
      community.general.ini_file:
        path: /etc/systemd/timesyncd.conf
        no_extra_spaces: true
        section: Time
        option: NTP
        value: ntp.nic.cz
        mode: u=rw,g=r,o=r
      notify: Reload systemctl

    - name: Add CloudFlare DNS update script for NetworkManager
      ansible.builtin.template:
        src: files/etc/NetworkManager/dispatcher.d/05-cloudflare_dns.j2
        dest: /etc/NetworkManager/dispatcher.d/05-cloudflare_dns
        mode: u=rwx,g=rx,o=rx

    - name: Configure plymouth
      community.general.ini_file:
        path: /etc/plymouth/plymouthd.conf
        no_extra_spaces: true
        section: Daemon
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: u=rw,g=r,o=r
      loop:
        - option: Theme
          value: "{{ plymouth_theme }}"
        - option: ShowDelay
          value: 0
      notify: Plymouth rebuild initrd

    # https://fedoramagazine.org/docker-and-fedora-32/
    # "unified_cgroup_hierarchy" is needed for docker / moby
    # Check in new Fedora 33 if this is still needed !!!!
    - name: Modify grub settings
      ansible.builtin.replace:
        dest: /etc/default/grub
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
        mode: u=rw,g=r,o=r
      loop:
        - regexp: 'rhgb quiet"'
          replace: 'rhgb quiet systemd.unified_cgroup_hierarchy=0 rootflags=discard splash=quiet"'
      notify: Grub2 config

    - name: Configure WiFi
      when: wifi_interface|length > 0
      tags: secrets
      block:
        - name: Add Open wifi accounts
          ansible.builtin.command: nmcli connection add con-name "{{ item }}" type wifi ifname "{{ wifi_interface }}" ssid "{{ item }}" 802-11-wireless.mac-address-randomization always
          args:
            creates: /etc/sysconfig/network-scripts/ifcfg-{{ item | regex_replace(' ', '_') }}
          loop: "{{ open_wifi }}"

        - name: Add WPA/WPA2 Personal wifi accounts
          ansible.builtin.command: nmcli connection add con-name "{{ item.ssid }}" type wifi ifname "{{ wifi_interface }}" ssid "{{ item.ssid }}" -- wifi-sec.key-mgmt wpa-psk 802-11-wireless-security.psk "{{ item.password }}"
          args:
            creates: /etc/sysconfig/network-scripts/ifcfg-{{ item.ssid | regex_replace(' ', '_') }}
          loop: "{{ wpa_personal_wifi }}"
          loop_control:
            label: "{{ item.ssid }}"

      rescue:
        - name: Print when errors
          ansible.builtin.fail:
            msg: Wifi configuration failed !!!

    - name: Create bash completition file for rclone
      ansible.builtin.command: rclone genautocomplete bash
      args:
        creates: /etc/bash_completion.d/rclone

    - name: Import Zoom key
      ansible.builtin.rpm_key:
        key: https://zoom.us/linux/download/pubkey?version=5-12-6
      register: result
      until: result is succeeded

    - name: Install Zoom
      ansible.builtin.dnf:
        name: https://zoom.us/client/latest/zoom_x86_64.rpm
      when: ansible_facts.packages.zoom is not defined

  rescue:
    - name: Print when errors
      ansible.builtin.fail:
        msg: Root configuration failed !!!

###############################
# Run as {{ ansible_user_id }}
###############################

- name: Create Documents, Movies, Music, Pictures directories
  ansible.builtin.file:
    path: ~/{{ item }}
    state: directory
    mode: u=rwx,g=rx,o=rx
  loop:
    - Documents
    - Movies
    - Music
    - Pictures

- name: Install Homebrew
  ansible.builtin.shell: |
    set -o pipefail
    echo | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  args:
    creates: /home/linuxbrew/.linuxbrew/bin/brew

- name: Upgrade all Homebrew packages
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true
    path: /home/linuxbrew/.linuxbrew/bin
  changed_when: false

- name: Install Homebrew packages
  community.general.homebrew:
    name: "{{ homebrew }}"
    path: /home/linuxbrew/.linuxbrew/bin

- name: Create KDE autostart directory for scripts
  ansible.builtin.file:
    path: ~/.config/autostart-scripts
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Link KDE startup script
  ansible.builtin.file:
    src: ~/bin/kde_startup.sh
    dest: ~/.config/autostart-scripts/kde_startup.sh
    state: link
    follow: false
    force: true

- name: Create direcotries for konsole config (KDE)
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,g=rx,o=rx
  loop:
    - ~/.local/share/kxmlgui5/konsole
    - ~/.local/share/konsole

- name: Configure Konsole (konsolerc)
  community.general.ini_file:
    path: ~/.config/konsolerc
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Desktop Entry
      option: DefaultProfile
      value: Shell.profile
    - section: KonsoleWindow
      option: ShowMenuBarByDefault
      value: "false"
    - section: KonsoleWindow
      option: ShowWindowTitleOnTitleBar
      value: "true"
    - section: MainWindow
      option: MenuBar
      value: "Disabled"
    - section: TabBar
      option: TabBarVisibility
      value: ShowTabBarWhenNeeded

- name: Copy Konsole settings
  ansible.builtin.copy:
    src: files/home/myusername/.local/share/kxmlgui5/konsole/sessionui.rc
    dest: ~/.local/share/kxmlgui5/konsole/sessionui.rc
    mode: u=rw,g=,o=

- name: Configure Konsole Profile (Shell.profile)
  community.general.ini_file:
    path: ~/.local/share/konsole/Shell.profile
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Appearance
      option: Font
      value: Monospace,13,-1,5,50,0,0,0,0,0
    - section: Appearance
      option: ColorScheme
      value: Linux
    - section: General
      option: DimWhenInactive
      value: "true"
    - section: General
      option: Name
      value: Shell
    - section: Interaction Options
      option: CopyTextAsHTML
      value: "false"
    - section: Interaction Options
      option: TrimTrailingSpacesInSelectedText
      value: "true"
    - section: Interaction Options
      option: UnderlineLinksEnabled
      value: "false"
    - section: Scrolling
      option: HistorySize
      value: 100000
    - section: Scrolling
      option: ScrollFullPage
      value: 1
    - section: Terminal Features
      option: FlowControlEnabled
      value: "false"

# Adding the cz layout to KDE - will break Alt+A in mc
- name: Configure Keyboard layout settings (kxkbrc)
  community.general.ini_file:
    path: ~/.config/kxkbrc
    no_extra_spaces: true
    section: Layout
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - option: DisplayNames
      value: ","
    - option: LayoutList
      value: "us,cz(qwerty_bksl)"
    - option: Use
      value: "true"

- name: Powerdevil configuration (powerdevilrc)
  community.general.ini_file:
    path: ~/.config/powerdevilrc
    no_extra_spaces: true
    section: BatteryManagement
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - option: BatteryCriticalAction
      value: 0
    - option: BatteryCriticalLevel
      value: 3

- name: Chnage PowerManagement settings
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: u=rw,g=,o=
  loop:
    - src: files/home/myusername/.config/powermanagementprofilesrc
      dest: ~/.config/powermanagementprofilesrc

- name: Chnage Desktop Effects settings
  community.general.ini_file:
    path: ~/.config/kwinrc
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Desktops
      option: Number
      value: 6
    - section: Desktops
      option: Rows
      value: 2
    - section: Plugins
      option: mousemarkEnabled
      value: "true"
    - section: TabBox
      option: DesktopLayout
      value: org.kde.breeze.desktop
    - section: TabBox
      option: DesktopListLayout
      value: org.kde.breeze.desktop
    - section: TabBox
      option: LayoutName
      value: org.kde.breeze.desktop
    - section: Windows
      option: ElectricBorders
      value: 1
    - section: org.kde.kdecoration2
      option: library
      value: org.kde.breeze
    - section: org.kde.kdecoration2
      option: ButtonsOnLeft
      value: MSF
    - section: NightColor
      option: Active
      value: "true"

- name: Configure ksmserverrc - logout without confirmation
  community.general.ini_file:
    path: ~/.config/ksmserverrc
    no_extra_spaces: true
    section: General
    option: confirmLogout
    value: "false"
    mode: u=rw,g=,o=

- name: Chnage Desktop Sessions settings
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: u=rw,g=,o=
  loop:
    - src: files/home/myusername/.config/kdeglobals
      dest: ~/.config/kdeglobals

- name: Disable usage of KDE indexing feature - systemsettingsrc and baloofilerc
  community.general.ini_file:
    path: "{{ item }}"
    no_extra_spaces: true
    section: Basic Settings
    option: Indexing-Enabled
    value: "false"
    mode: u=rw,g=,o=
  loop:
    - ~/.config/systemsettingsrc
    - ~/.config/baloofilerc

- name: Enable Touchpad acceleration
  community.general.ini_file:
    path: ~/.config/touchpadxlibinputrc
    no_extra_spaces: true
    section: SynPS/2 Synaptics TouchPad
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - option: pointerAcceleration
      value: 0.6

- name: Configure plasma theme
  community.general.ini_file:
    path: ~/.config/plasmarc
    no_extra_spaces: true
    section: Theme
    option: name
    value: breeze-dark
    mode: u=rw,g=,o=

- name: Configure plasma calendar holiday regions
  community.general.ini_file:
    path: ~/.config/plasma_calendar_holiday_regions
    no_extra_spaces: true
    section: General
    option: selectedRegions
    value: cz_cs
    mode: u=rw,g=,o=

- name: Configure Plasma (desktop, taskbar) - plasma-org.kde.plasma.desktop-appletsrc
  ansible.builtin.template:
    src: files/home/myusername/.config/plasma-org.kde.plasma.desktop-appletsrc.j2
    dest: ~/.config/plasma-org.kde.plasma.desktop-appletsrc
    mode: u=rw,g=,o=

- name: Configure Plasma (desktop, taskbar) - kactivitymanagerdrc + kactivitymanagerd-statsrc
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: u=rw,g=,o=
  loop:
    - src: files/home/myusername/.config/kactivitymanagerdrc
      dest: ~/.config/kactivitymanagerdrc
    - src: files/home/myusername/.config/kactivitymanagerd-statsrc
      dest: ~/.config/kactivitymanagerd-statsrc

- name: Disable kwallet
  community.general.ini_file:
    path: ~/.config/kwalletrc
    no_extra_spaces: true
    section: Wallet
    option: First Use
    value: "false"
    mode: u=rw,g=,o=

- name: Configure Plasma screen locking - kscreenlockerrc
  community.general.ini_file:
    path: ~/.config/kscreenlockerrc
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Daemon
      option: Autolock
      value: "false"
    - section: Greeter
      option: Theme
      value: org.kde.breezedark.desktop
    - section: Greeter
      option: WallpaperPlugin
      value: org.kde.haenau

- name: Configure dolphin
  community.general.ini_file:
    path: ~/.config/dolphinrc
    no_extra_spaces: true
    section: General
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - option: BrowseThroughArchives
      value: "true"
    - option: ConfirmClosingMultipleTabs
      value: "false"
    - option: EditableUrl
      value: "true"
    - option: GlobalViewProps
      value: "true"
    - option: ShowFullPath
      value: "true"
    - option: SplitView
      value: "true"

- name: Configure gwenview
  community.general.ini_file:
    path: ~/.config/gwenviewrc
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: ImageView
      option: AnimationMethod
      value: "DocumentView::GLAnimation"
    - section: ImageView
      option: MouseWheelBehavior
      value: "MouseWheelBehavior::Zoom"
    - section: ImageView
      option: ZoomMode
      value: "ZoomMode::KeepSame"
    - section: SideBar
      option: PreferredMetaInfoKeyList
      value: Exif.Image.Software,Exif.GPSInfo.GPSLatitude,Exif.Image.DateTime,Xmp.dc.title,Xmp.dc.description,Xmp.tiff.Artist,Xmp.xmp.Keywords

- name: Configure Okular
  community.general.ini_file:
    path: ~/.config/okularpartrc
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: PageView
      option: TrimMargins
      value: "true"

- name: Create ~/.config/vokoscreenNG directory
  ansible.builtin.file:
    path: ~/.config/vokoscreenNG
    state: directory
    mode: u=rwx,g=rwx,o=rx

- name: Vokoscreen configuration
  community.general.ini_file:
    path: ~/.config/vokoscreenNG/vokoscreenNG.ini
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Audio
      option: AudioOnOff
      value: 0
    - section: Miscellaneous
      option: Countdown
      value: 5
    - section: Miscellaneous
      option: Minimized
      value: 2
    - section: Videooptions
      option: Videocodec
      value: libx265
    - section: Videooptions
      option: X264Lossless
      value: 0

- name: Create directory for GTK3 configuration
  ansible.builtin.file:
    path: ~/.config/gtk-3.0
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Create GTK3 configuration
  community.general.ini_file:
    path: ~/.config/gtk-3.0/settings.ini
    no_extra_spaces: true
    section: Settings
    option: gtk-application-prefer-dark-theme
    value: "1"
    mode: u=rw,g=,o=

- name: Configure file associations (MIME)
  community.general.ini_file:
    path: ~/.config/mimeapps.list
    no_extra_spaces: true
    section: Default Applications
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - option: text/html
      value: chromium-browser.desktop
    - option: x-scheme-handler/http
      value: chromium-browser.desktop
    - option: x-scheme-handler/https
      value: chromium-browser.desktop
    - option: x-scheme-handler/about
      value: chromium-browser.desktop
    - option: application/x-extension-html
      value: chromium-browser.desktop
    - option: application/x-extension-shtml
      value: chromium-browser.desktop
    - option: application/x-extension-xhtml
      value: chromium-browser.desktop
    - option: application/xhtml+xml
      value: chromium-browser.desktop
    - option: application/x-gpx+xml
      value: gpxsee.desktop

- name: Configure Meld
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  loop:
    - key: /org/gnome/meld/indent-width
      value: "4"
    - key: /org/gnome/meld/highlight-current-line
      value: "true"
    - key: /org/gnome/meld/style-scheme
      value: "'cobalt'"
    - key: /org/gnome/meld/show-line-numbers
      value: "true"
    - key: /org/gnome/meld/insert-spaces-instead-of-tabs
      value: "true"
    - key: /org/gnome/meld/highlight-syntax
      value: "true"

- name: Configure Virtual Manager
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  loop:
    - key: /org/virt-manager/virt-manager/vmlist-fields/host-cpu-usage
      value: "true"
    - key: /org/virt-manager/virt-manager/vmlist-fields/memory-usage
      value: "true"
    - key: /org/virt-manager/virt-manager/vmlist-fields/network-traffic
      value: "true"
    - key: /org/virt-manager/virt-manager/vmlist-fields/disk-usage
      value: "true"
    - key: /org/virt-manager/virt-manager/new-vm/graphics-type
      value: "'system'"
    - key: /org/virt-manager/virt-manager/new-vm/cpu-default
      value: "'host-model'"
    - key: /org/virt-manager/virt-manager/console/resize-guest
      value: "1"
    - key: /org/virt-manager/virt-manager/console/scaling
      value: "0"
    - key: /org/virt-manager/virt-manager/confirm/unapplied-dev
      value: "true"
    - key: /org/virt-manager/virt-manager/confirm/removedev
      value: "false"
    - key: /org/virt-manager/virt-manager/confirm/interface-power
      value: "false"
    - key: /org/virt-manager/virt-manager/confirm/forcepoweroff
      value: "false"
    - key: /org/virt-manager/virt-manager/stats/enable-memory-poll
      value: "true"
    - key: /org/virt-manager/virt-manager/stats/enable-net-poll
      value: "true"
    - key: /org/virt-manager/virt-manager/stats/enable-disk-poll
      value: "true"

- name: Configure hugin
  community.general.ini_file:
    path: ~/.hugin
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,o=rw,o=r
  loop:
    - section: MainFrame
      option: ShowStartTip
      value: 0
    - section: Assistant
      option: autoAlign
      value: 1
    - section: AutoPano
      option: Default
      value: 1
    - section: Celeste
      option: Auto
      value: 1
    - section: Nona
      option: UseGPU
      value: 1

- name: Configure LibreOffice
  ansible.builtin.copy:
    src: files/home/myusername/.config/libreoffice
    dest: ~/.config/
    directory_mode: u=rwx,g=rx,o=rx
    mode: u=rw,g=r,o=r

- name: Copy kdeconnect configuration
  ansible.builtin.copy:
    src: files/home/myusername/.config/kdeconnect
    dest: ~/.config/
    mode: u=rw,g=,o=
  tags: secrets

- name: Configure .bashrc for {{ ansible_user_id }}
  ansible.builtin.blockinfile:
    dest: ~/.bashrc
    block: |
      {% raw %}
      HISTSIZE=100000
      HISTFILESIZE=100000
      alias dos2unix="sed -i 's/\r$//' "
      alias unix2dos="awk 'sub(\"$\",\"\r\")' "
      alias md5sum_dir="rhash --md5 --recursive --percents --output=md5sum.md5 ." # DevSkim: ignore DS126858
      alias k=kubectl
      alias cat="bat -p --paging=never"
      alias ip='ip -color=auto'
      alias ls="eza -g"

      for COMPLETION in "/home/linuxbrew/.linuxbrew/etc/bash_completion.d/"*; do
        source "$COMPLETION"
      done

      source /usr/share/fzf/shell/key-bindings.bash
      source /home/linuxbrew/.linuxbrew/opt/oci-cli/libexec/lib/python3.9/site-packages/oci_cli/bin/oci_autocomplete.sh

      if [ "${ASCIINEMA_REC}" = "1" ]; then
        . /usr/share/git-core/contrib/completion/git-prompt.sh
        PS1='\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\]$([ "$(__git_ps1 %s)" != "main" ] && (echo -e " (\[\033[01;93m\]"$(__git_ps1 "%s")"\[\033[01;0m\])") || echo "")\$ '
      fi

      eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

      PATH="${HOME}/node_modules/.bin:${HOME}/.krew/bin:${HOME}/bin:/usr/lib/qtchooser:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin"
      export PATH
      {% endraw %}

- name: List installed Vagrant Plugins
  ansible.builtin.command: vagrant plugin list
  register: vagrant_plugin_list
  changed_when: false

- name: Install Vagrant Plugins
  ansible.builtin.command: vagrant plugin install {{ item }}
  environment:
    CONFIGURE_ARGS: with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib64
  changed_when: false
  loop: "{{ vagrant_plugins }}"
  when: not vagrant_plugin_list.stdout is search(item)

- name: Create ~/.local/share/applications/ directory
  ansible.builtin.file:
    path: ~/.local/share/applications/
    state: directory
    mode: u=rwx,g=rwx,o=rx

# https://wiki.archlinux.org/index.php/default_applications
- name: Enable mime compatibility
  ansible.builtin.file:
    src: /usr/share/applications/mimeapps.list
    dest: ~/.local/share/applications/mimeapps.list
    state: link

- name: Create ~/.config/gpxsee directory
  ansible.builtin.file:
    path: ~/.config/gpxsee
    state: directory
    mode: u=rwx,g=rwx,o=rx

- name: GPXSee configuration
  community.general.ini_file:
    path: ~/.config/gpxsee/gpxsee.conf
    no_extra_spaces: true
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: u=rw,g=,o=
  loop:
    - section: Map
      option: map
      value: Open Street Map
    - section: Options
      option: pixmapCache
      value: 16
    - section: Options
      option: useOpenGL
      value: "true"
    - section: Settings
      option: units
      value: 0
