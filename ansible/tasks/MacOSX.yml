- name: Get GeneratedUID for the current user
  ansible.builtin.shell: |
    set -o pipefail
    dscl . -read {{ ansible_user_dir }}/ GeneratedUID | awk '{ print $2 }'
  register: dscl_output
  changed_when: false

- name: Get wi-fi interface
  ansible.builtin.shell: |
    set -o pipefail
    networksetup -listallhardwareports | awk '$3=="Wi-Fi" { getline; print $2 }'
  register: networksetup
  changed_when: false

- name: Set facts
  ansible.builtin.set_fact:
    generateduid: "{{ dscl_output.stdout }}"
    wifi_interface: "{{ networksetup.stdout }}"

- name: Set secret facts
  ansible.builtin.set_fact:
    raspi_username: "{{ lookup('ini', 'username section=' + raspi_hostname + ' file=' + data_source_dir + '/Documents/secrets/' + raspi_hostname + '-cifs-credentials') }}"
    raspi_password: "{{ lookup('ini', 'password section=' + raspi_hostname + ' file=' + data_source_dir + '/Documents/secrets/' + raspi_hostname + '-cifs-credentials') }}"
  tags:
    - secrets

- name: Set Hostname + Disable sleeping
  become: true
  block:
    # https://apple.stackexchange.com/questions/125411/how-do-i-stop-my-computer-name-from-automatically-and-incorrectly-changing/
    - name: Set Hostname
      ansible.builtin.command: "{{ item }}"
      changed_when: false
      loop:
        - scutil --set ComputerName "{{ my_hostname.split(".")[0] }}"
        - scutil --set HostName "{{ my_hostname.split(".")[0] }}"
        - scutil --set LocalHostName "{{ my_hostname.split(".")[0] }}"

    # https://discussions.apple.com/thread/2457573
    - name: Set NetBIOSName
      community.general.osx_defaults:
        domain: /Library/Preferences/SystemConfiguration/com.apple.smb.server
        key: NetBIOSName
        type: string
        value: "{{ my_hostname.split('.')[0] }}"
      changed_when: false

    - name: Set hibernation mode to not back memory up to persistent storage
      ansible.builtin.command: pmset -a hibernatemode 0
      changed_when: false

    # https://eclecticlight.co/2017/01/20/power-management-in-detail-using-pmset/
    - name: Turn display off after 30 minutes when running on power adapter
      ansible.builtin.command: pmset -a displaysleep 30
      changed_when: false

    - name: Turn display off after 5 minutes when running on battery
      ansible.builtin.command: pmset -b displaysleep 5
      changed_when: false

- name: Install Homebrew
  ansible.builtin.shell: |
    set -o pipefail
    echo | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  args:
    creates: /usr/local/bin/brew

- name: Install Homebrew packages
  community.general.homebrew:
    name: "{{ homebrew_packages }}"
    update_homebrew: true

- name: Install Homebrew casks
  community.general.homebrew_cask:
    name: "{{ homebrew_casks }}"
    install_options: no-quarantine

# Needs logout to be applied
- name: Set scroll direction
  community.general.osx_defaults:
    key: com.apple.swipescrolldirection
    type: bool
    value: false

- name: Ask to keep changes when closing documents
  community.general.osx_defaults:
    key: NSCloseAlwaysConfirmsChanges
    type: bool
    value: true

# https://www.defaults-write.com/expand-save-panel-default/
- name: Expand save panel by default
  community.general.osx_defaults:
    key: NSNavPanelExpandedStateForSaveMode
    type: bool
    value: true

# https://www.mactrast.com/2017/03/show-status-bar-finder-macos-sierra/
- name: Show status bar
  community.general.osx_defaults:
    domain: com.apple.finder
    key: ShowStatusBar
    type: bool
    value: true

# https://www.techjunkie.com/show-path-finder-title-bar/
- name: Show path bar
  community.general.osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: true

# https://www.defaults-write.com/change-default-view-style-in-os-x-finder/
- name: Use list view in all Finder windows by default
  community.general.osx_defaults:
    domain: com.apple.finder
    key: FXPreferredViewStyle
    value: Nlsv

# https://www.defaults-write.com/display-full-posix-path-in-os-x-finder-title-bar/
- name: Display full posix path in Finder title Bar
  community.general.osx_defaults:
    domain: com.apple.finder
    key: _FXShowPosixPathInTitle
    type: bool
    value: true

# https://www.defaults-write.com/disable-the-extension-change-warning-in-os-x-finder/
- name: Disable the extension change warning in Finder
  community.general.osx_defaults:
    domain: com.apple.finder
    key: FXEnableExtensionChangeWarning
    type: bool
    value: false

- name: Search the current folder by default
  community.general.osx_defaults:
    domain: com.apple.finder
    key: FXDefaultSearchScope
    type: string
    value: "SCcf"

- name: Keep folders on top
  community.general.osx_defaults:
    domain: com.apple.finder
    key: _FXSortFoldersFirst
    type: bool
    value: "true"

- name: Remove items from the Trash after 30 days
  community.general.osx_defaults:
    domain: com.apple.finder
    key: FXRemoveOldTrashItems
    type: bool
    value: "true"

- name: Set a default folder when opening Finder ($HOME)
  community.general.osx_defaults:
    domain: com.apple.finder
    key: "{{ item.key }}"
    type: string
    value: "{{ item.value }}"
  loop:
    - key: NewWindowTargetPath
      value: file://{{ ansible_user_dir }}/
    - key: NewWindowTarget
      value: PfHm

# https://www.makeuseof.com/tag/hidden-mac-settings-defaults-command/
- name: Add the Quit Option to Finder
  community.general.osx_defaults:
    domain: com.apple.finder
    key: QuitMenuItem
    type: bool
    value: "true"

# https://www.defaults-write.com/add-a-message-to-the-login-screen/
- name: Add a message to the login screen
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: LoginwindowText
    type: string
    value: "This is a private computer system. Unauthorized access to the system is prohibited and may constitute violation of criminal laws. {{ email }}"
  become: true

# https://www.defaults-write.com/disable-screenshots-shadow-mac/
- name: Disable screenshot shadows on a Mac
  community.general.osx_defaults:
    domain: com.apple.screencapture
    key: disable-shadow
    type: bool
    value: true

# https://www.defaults-write.com/display-the-file-extensions-in-finder/
- name: Display the file extensions in Finder
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: AppleShowAllExtensions
    type: bool
    value: true

# https://www.defaults-write.com/plain-text-default-textedit/
- name: Use plain text as default format in TextEdit
  community.general.osx_defaults:
    domain: com.apple.TextEdit
    key: RichText
    type: int
    value: 0

# https://www.defaults-write.com/disable-the-warning-before-emptying-the-trash/
- name: Disable the warning before emptying the Trash
  community.general.osx_defaults:
    domain: com.apple.finder
    key: WarnOnEmptyTrash
    type: bool
    value: false

- name: Show the Dock on the left-hand side
  community.general.osx_defaults:
    domain: com.apple.dock
    key: orientation
    type: string
    value: left

- name: Set the icon size of Dock items to "dock_icons_size" pixels
  community.general.osx_defaults:
    domain: com.apple.dock
    key: tilesize
    type: float
    value: "{{ dock_icons_size }}"

- name: Automatically hide and show the Dock
  community.general.osx_defaults:
    domain: com.apple.dock
    key: autohide
    type: bool
    value: true

# https://blog.jiayu.co/2018/12/quickly-configuring-hot-corners-on-macos/
- name: Disable screensaver when mouse is right top
  community.general.osx_defaults:
    domain: com.apple.dock
    key: "{{ item.key }}"
    type: int
    value: "{{ item.value }}"
  loop:
    # Disable screensaver when mouse is right top
    - key: wvous-tr-corner
      value: 6
    - key: wvous-tr-modifier
      value: 0

- name: Expand print panel by default
  community.general.osx_defaults:
    key: PMPrintingExpandedStateForPrint2
    type: bool
    value: true

- name: Language & Region settings
  community.general.osx_defaults:
    key: "{{ item.key }}"
    type: "{% if item.type is defined %}{{ item.type }}{% else %}string{% endif %}"
    value: "{{ item.value }}"
  loop:
    - key: AppleLocale
      value: en_CZ
    - key: AppleMeasurementUnits
      value: Centimeters
    - key: AppleMetricUnits
      type: bool
      value: true
    - key: AppleTemperatureUnit
      value: Celsius
    - key: DateFormat
      value: "d MMM HH:mm"

- name: Change keyboard repeat delays
  community.general.osx_defaults:
    key: "{{ item.key }}"
    type: int
    value: "{{ item.value }}"
  loop:
    - key: InitialKeyRepeat
      value: 25
    - key: KeyRepeat
      value: 2

# https://www.digitalcitizen.life/change-keyboard-input-language-mac
- name: Configure keyboard switching
  ansible.builtin.shell: |
    /usr/libexec/PlistBuddy -c "set :AppleSymbolicHotKeys:61:enabled true" ~/Library/Preferences/com.apple.symbolichotkeys.plist
  changed_when: false
  tags: skip_test

- name: Change clock to 24hour mode
  community.general.osx_defaults:
    domain: com.apple.menuextra.clock
    key: DateFormat
    type: string
    value: "d. M.  H:mm"
  changed_when: false

# https://osxdaily.com/2018/10/22/hide-show-recent-apps-mac-dock/
- name: Hide 'recent applications' from dock
  community.general.osx_defaults:
    domain: com.apple.dock
    key: show-recents
    type: bool
    value: "false"

- name: Do not show the keyboard layout in status bar
  community.general.osx_defaults:
    domain: com.apple.TextInputMenu
    key: visible
    type: bool
    value: "false"

- name: Always show scrollbars
  community.general.osx_defaults:
    key: AppleShowScrollBars
    type: string
    value: Always

- name: Create MacOS data directories if missing
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,g=,o=
  loop:
    - ~/Pictures
    - ~/Music
  tags: user_specific

- name: Download Picture which will be used as login "Picture"
  ansible.builtin.get_url:
    url: "{{ login_picture_url }}"
    dest: ~/Pictures/login_picture.jpg
    mode: u=rw,g=r,o=r
  tags: user_specific

# https://www.alansiu.net/2019/09/20/scripting-changing-the-user-picture-in-macos/
- name: Set login picture
  ansible.builtin.copy:
    dest: /Library/Caches/{{ ansible_user_id }}.picture.dsimport
    content: |
      0x0A 0x5C 0x3A 0x2C dsRecTypeStandard:Users 2 dsAttrTypeStandard:RecordName externalbinary:dsAttrTypeStandard:JPEGPhoto
      {{ ansible_user_id }}:{{ ansible_user_dir }}/Pictures/login_picture.jpg
    mode: u=rw,g=r,o=r
  notify: Set login picture
  tags: user_specific

- name: Configure wifi interface if exists
  when: wifi_interface|length > 0
  tags: secrets
  block:
    - name: Add Open wifi accounts
      ansible.builtin.command: networksetup -addpreferredwirelessnetworkatindex {{ wifi_interface }} "{{ item }}" 1 Open
      changed_when: "'is already in the preferred networks list' not in networksetup.stdout"
      register: networksetup
      loop: "{{ open_wifi }}"

    - name: Add WPA/WPA2 Personal wifi accounts
      ansible.builtin.command: networksetup -addpreferredwirelessnetworkatindex {{ wifi_interface }} "{{ item.ssid }}" 1 WPA2 "{{ item.password }}"
      changed_when: "'is already in the preferred networks list' not in networksetup.stdout"
      register: networksetup
      loop: "{{ wpa_personal_wifi }}"
      loop_control:
        label: "{{ item.ssid }}"

    - name: Unlock keychain (needed for "security add-generic-password")
      ansible.builtin.command: security -v unlock-keychain -p "{{ ansible_password }}" ~/Library/Keychains/login.keychain-db
      changed_when: false

# https://www.jamf.com/jamf-nation/discussions/33942/disable-reopen-windows-when-logging-back-in-mojave-and-higher
- name: Disable Reopen Windows When Logging Back
  community.general.osx_defaults:
    domain: com.apple.loginwindow
    key: TALLogoutSavesState
    type: bool
    value: "false"

- name: Show the full URL in the address bar
  community.general.osx_defaults:
    domain: com.apple.Safari
    key: ShowFullURLInSmartSearchField
    type: bool
    value: "true"

- name: Show website icons in tabs
  community.general.osx_defaults:
    domain: com.apple.Safari
    key: ShowIconsInTabs
    type: bool
    value: "true"

# https://github.com/mathiasbynens/custom.keylayout/issues/7
- name: Add Czech keyboard
  community.general.osx_defaults:
    domain: com.apple.HIToolbox
    key: AppleEnabledInputSources
    type: array
    value:
      - "<dict><key>InputSourceKind</key><string>Keyboard Layout</string><key>KeyboardLayout ID</key><integer>0</integer><key>KeyboardLayout Name</key><string>U.S.</string></dict>"
      - "<dict><key>InputSourceKind</key><string>Keyboard Layout</string><key>KeyboardLayout ID</key><integer>30778</integer><key>KeyboardLayout Name</key><string>Czech-QWERTY</string></dict>"
  changed_when: false

- name: Automatically keep my Mac up to date
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: bool
    value: "true"
  loop:
    - domain: /Library/Preferences/com.apple.SoftwareUpdate.plist
      key: AutomaticallyInstallMacOSUpdates
    - domain: /Library/Preferences/com.apple.SoftwareUpdate.plist
      key: AutomaticCheckEnabled
    - domain: /Library/Preferences/com.apple.commerce.plist
      key: AutoUpdate
  become: true
  tags: company

# https://osxdaily.com/2010/02/03/how-to-prevent-ds_store-file-creation/
- name: Stop DS_Store File Creation on Network Volumes
  community.general.osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    value: "true"

# https://osxdaily.com/2014/01/31/turn-on-mac-touch-to-click-command-line/ (Reboot is required)
- name: Enable tap-to-click
  community.general.osx_defaults:
    domain: com.apple.AppleMultitouchTrackpad
    key: Clicking
    type: int
    value: 1

# https://www.moldvan.com/keeping-night-shift-on-in-osx/
- name: Enable Night Shift
  ansible.builtin.command: /usr/libexec/PlistBuddy -c "Set :CBUser-{{ generateduid }}:CBBlueReductionStatus:BlueReductionMode 1" /private/var/root/Library/Preferences/com.apple.CoreBrightness.plist
  changed_when: false
  become: true
  # The file above doesn't exists in GitHub's MacOS instance
  tags: skip_test

- name: Show all devices in Disk Utility
  community.general.osx_defaults:
    domain: com.apple.DiskUtility
    key: SidebarShowAllDevices
    type: bool
    value: "true"

- name: Change owner of Library/LaunchAgents (if needed)
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/Library/LaunchAgents"
    owner: "{{ ansible_user_id }}"
  become: true

# https://szymonkrajewski.pl/macos-backup-restic/
- name: Add backup Launch Agent
  ansible.builtin.template:
    src: files/Users/myusername/Library/LaunchAgents/backup.plist.j2
    dest: ~/Library/LaunchAgents/backup.plist
    mode: u=rw,g=r,o=r

- name: Add pkgs_upgrade Launch Agent
  ansible.builtin.template:
    src: files/Users/myusername/Library/LaunchAgents/pkgs_upgrade.plist.j2
    dest: ~/Library/LaunchAgents/pkgs_upgrade.plist
    mode: u=rw,g=r,o=r

- name: Activate ~/Library/LaunchAgents/pkgs_upgrade.plist
  ansible.builtin.command: launchctl load ~/Library/LaunchAgents/pkgs_upgrade.plist
  changed_when: launchctl.stderr | length == 0
  register: launchctl

- name: Configure Samba and Samba shares
  become: true
  block:
    - name: Enable File Sharing (Samba)
      ansible.builtin.command: launchctl load -w /System/Library/LaunchDaemons/com.apple.smbd.plist
      changed_when: launchctl.stderr | length == 0
      register: launchctl
      tags: company

    - name: Get list of all shared directories
      ansible.builtin.command: sharing -l
      changed_when: false
      register: sharing

    # https://krypted.com/mac-os-x-server/setup-file-sharing-service-macos-10-13-high-sierra/
    - name: Share directories
      ansible.builtin.command: sharing -a {{ item }} -g 000 -A {{ item | basename }}
      changed_when: false
      when: item not in sharing.stdout
      loop:
        - "{{ ansible_user_dir }}/Music"

    # https://krypted.com/mac-os-x/enable-smb-sharing-specified-users-macos/
    - name: Allow SMB to use user passwords
      ansible.builtin.command: pwpolicy -u {{ ansible_user_id }} -sethashtypes SMB-NT on
      changed_when: false

    - name: Configure SMB shares via automount
      ansible.builtin.lineinfile:
        path: /etc/auto_master
        regexp: "^/-                      auto_smb        -nosuid,noowner"
        line: "/-                      auto_smb        -nosuid,noowner"
        mode: u=rw,g=r,o=r

    - name: Set the file to read-only to prevent overwrite by macOS updates
      ansible.builtin.command: chflags schg /etc/auto_master
      changed_when: false

    - name: Create "/System/Volumes/Data/mnt/raspi_hostname" directory for network shares
      ansible.builtin.file:
        path: /System/Volumes/Data/mnt/{{ raspi_hostname }}
        state: directory
        mode: u=rwx,g=rx,o=rx

    # https://gist.github.com/rudelm/7bcc905ab748ab9879ea
    - name: Configure SMB shares via automount
      ansible.builtin.copy:
        dest: /etc/auto_smb
        mode: u=rw,g=,o=
        content: |
          /System/Volumes/Data/mnt/{{ raspi_hostname }}/movies   -fstype=smbfs,soft,noowners,nosuid,rw ://{{ raspi_username }}:{{ raspi_password }}@{{ raspi_hostname }}:/movies-rw
          /System/Volumes/Data/mnt/{{ raspi_hostname }}/music    -fstype=smbfs,soft,noowners,nosuid,rw ://{{ raspi_username }}:{{ raspi_password }}@{{ raspi_hostname }}:/music-rw
          /System/Volumes/Data/mnt/{{ raspi_hostname }}/torrents -fstype=smbfs,soft,noowners,nosuid,rw ://{{ raspi_username }}:{{ raspi_password }}@{{ raspi_hostname }}:/torrents
          /System/Volumes/Data/mnt/{{ raspi_hostname }}/backup   -fstype=smbfs,soft,noowners,nosuid,rw ://{{ raspi_username }}:{{ raspi_password }}@{{ raspi_hostname }}:/backup
      tags:
        - secrets

    - name: Create link from "/System/Volumes/Data/mnt/raspi_hostname" to ~/Documents/
      ansible.builtin.file:
        src: /System/Volumes/Data/mnt/{{ raspi_hostname }}
        dest: "{{ ansible_user_dir }}/Documents/{{ raspi_hostname }}"
        state: link

- name: Configure Finder sidebar favourites
  ansible.builtin.shell: |
    /usr/local/bin/mysides add {{ raspi_hostname }} file:///System/Volumes/Data/mnt/{{ raspi_hostname }}
    /usr/local/bin/mysides add {{ ansible_user_id }} file://{{ ansible_user_dir }}
  changed_when: false

# - name: Remove all Dock items
#   ansible.builtin.command: /usr/local/bin/dockutil --remove all --no-restart
#   changed_when: false

# - name: Add Dock items
#   ansible.builtin.command: /usr/local/bin/dockutil --add '{{ item }}' --no-restart
#   register: dock_add
#   changed_when: false
#   loop: "{{ dock_add_items }}"

################################################
# ZSH + Oh My Zsh + Powerlevel10k + fzf
################################################

- name: Install oh-my-zsh
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  args:
    creates: ~/.oh-my-zsh

- name: Put fzf configuration in place (~/.fzf.zsh)
  ansible.builtin.copy:
    dest: ~/.fzf.zsh
    content: |
      # Setup fzf
      if [[ ! "$PATH" == */usr/local/opt/fzf/bin* ]]; then
        export PATH="${PATH:+${PATH}:}/usr/local/opt/fzf/bin"
      fi

      # Auto-completion
      [[ $- == *i* ]] && source "/usr/local/opt/fzf/shell/completion.zsh" 2> /dev/null

      # Key bindings
      source "/usr/local/opt/fzf/shell/key-bindings.zsh"
    mode: u=rw,g=r,o=r

- name: Chnage ~/.zshrc
  ansible.builtin.replace:
    dest: ~/.zshrc
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    mode: u=rw,g=r,o=r
  loop:
    - regexp: "^plugins=.*"
      replace: plugins=(colored-man-pages dirhistory docker git history vagrant-prompt kubectl)
    # robbyrussell is not used - using powerlevel10k
    - regexp: '^ZSH_THEME="robbyrussell"'
      replace: '# ZSH_THEME="robbyrussell"'
    # Fix slows down copy-pasting
    - regexp: '^# DISABLE_MAGIC_FUNCTIONS="true"'
      replace: DISABLE_MAGIC_FUNCTIONS="true"

# Needed for bash scripts or ansible
- name: Add path to binaries to ~/.bashrc
  ansible.builtin.copy:
    dest: ~/.bashrc
    content: |
      MY_GENERATED_PATH=$(for BIN in /usr/local/opt/*/libexec/gnubin; do echo -n "${BIN}:"; done)
      export PATH="/usr/local/bin:${MY_GENERATED_PATH}${PATH}"
      if ps $PPID |grep mc; then
        PS1="\w ❯ "
      fi
    mode: u=rw,g=r,o=r

- name: Add commands to ~/.zshrc
  ansible.builtin.blockinfile:
    dest: ~/.zshrc
    block: |
      # set history size
      export HISTSIZE=50000
      # save history after logout
      export SAVEHIST=10000
      # save only one command if 2 common are same and consistent
      setopt HIST_IGNORE_ALL_DUPS
      # add timestamp for each entry
      setopt EXTENDED_HISTORY
      # Do not share history between sessions (like bash)
      setopt NO_SHARE_HISTORY

      # Needed for calling Ansible - https://github.com/ansible/ansible/issues/32499
      # export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

      # Use open command for Midnight Commander "open"
      export MC_XDG_OPEN=open

      # Remove the quarantine flag when it installs a package
      export HOMEBREW_CASK_OPTS="--no-quarantine"
      # Use bat for the brew cat command
      export HOMEBREW_BAT=1
      # Cleanup all cached files older than this many days
      export HOMEBREW_CLEANUP_MAX_AGE_DAYS=7
      # Fail on the failure of installation from a bottle rather than falling back to building from source
      export HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK=1
      # Stop Homebrew auto update
      export HOMEBREW_NO_AUTO_UPDATE=1

      # Enable homebrew, find, sed, coreutils
      MY_GENERATED_PATH=$(for BIN in /usr/local/opt/*/libexec/gnubin; do echo -n "${BIN}:"; done)
      export PATH="/usr/local/bin:/usr/local/sbin:${MY_GENERATED_PATH}${PATH}"

      # Enable man pages
      MY_GENERATED_MAN=$(for MAN in /usr/local/opt/*/libexec/gnuman; do echo -n "${MAN}:"; done)
      export MANPATH="${MY_GENERATED_MAN}${MANPATH}"

      # Enable binaries for node, krew and ~/bin
      export PATH="${HOME}/node_modules/.bin:${HOME}/.krew/bin:${HOME}/bin:${HOME}/Documents/mckinsey/bin:${HOME}/go/bin/:${PATH}"

      alias dos2unix="sed -i 's/\r$//' "
      alias unix2dos="awk 'sub(\"$\",\"\r\")' "
      alias md5sum_dir="rhash --md5 --recursive --percents --output=md5sum.md5 ."
      alias cat="bat --style=plain --paging=never"
      alias ls="eza -g"
      alias mc='SHELL=/bin/bash source /usr/local/opt/mc/libexec/mc/mc-wrapper.sh --nomouse'
      alias history="history -i"

      source ~/.fzf.zsh
      source ~/Documents/secrets/secret_variables

      # Enable powerlevel10k with zsh plugins
      source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
      source /usr/local/share/powerlevel10k/powerlevel10k.zsh-theme
      source /usr/local/share/powerlevel10k/config/p10k-lean.zsh

      DISABLE_AUTO_UPDATE="true"
      COMPLETION_WAITING_DOTS="true"
      HIST_STAMPS="yyyy-mm-dd"

      # Configure configure Ctrl+w as delete in bash
      autoload -U select-word-style
      select-word-style bash
      WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>:,|"'"'"

      # Add highlighters to zsh-syntax-highlighting (default is 'main')
      ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

      # If you don't set a sane max length the highlighter will highlight large pastes of text, which is painfully slow
      ZSH_HIGHLIGHT_MAXLENGTH=20

      # Disable underline in zsh-syntax-highlighting
      ZSH_HIGHLIGHT_STYLES[path]=none
      ZSH_HIGHLIGHT_STYLES[path_prefix]=none

      # Always reply Yes and automatically upgrade oh-my-zsh
      DISABLE_UPDATE_PROMPT=true

      # Disable adding newline before each prompt
      POWERLEVEL9K_PROMPT_ADD_NEWLINE=false

      # Remove "newline" form the prompt to have it on single line
      POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(${POWERLEVEL9K_LEFT_PROMPT_ELEMENTS[@]/newline/})
      POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(${POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS[@]/newline/})

      # Disable Kopia updates checks
      export KOPIA_CHECK_FOR_UPDATES=false

      export PAGER="bat --style=plain --paging=never"

      # added by terraform -install-autocomplete
      autoload -U +X bashcompinit && bashcompinit
      complete -o nospace -C /usr/local/bin/terraform terraform

      export GOPATH="${HOME}/go"

################################################
# Application configuration
################################################

- name: Check if iTerm2 config file is present (~/Library/Preferences/com.googlecode.iterm2.plist)
  ansible.builtin.stat:
    path: ~/Library/Preferences/com.googlecode.iterm2.plist
  register: com_googlecode_iterm2_plist

- name: Configure iTerm2
  when: not com_googlecode_iterm2_plist.stat.exists
  block:
    - name: Configure iTerm2
      community.general.osx_defaults:
        domain: com.googlecode.iterm2
        key: "{{ item.key }}"
        type: "{% if item.type is defined %}{{ item.type }}{% else %}bool{% endif %}"
        value: "{{ item.value }}"
      loop:
        - key: SmartPlacement
          value: "true"
        - key: PromptOnQuit
          value: "false"
        - key: FocusFollowsMouse
          value: "true"
        - key: NoSyncTipsDisabled
          value: "true"
        - key: OnlyWhenMoreTabs
          value: "false"
        - key: QuitWhenAllWindowsClosed
          value: "true"
        - key: SUEnableAutomaticChecks
          value: "false"
        - key: ThreeFingerEmulates
          value: "true"
        - key: TabViewType
          type: int
          value: 1
        - key: DoubleClickPerformsSmartSelection
          value: "true"
        - key: AddNewTabAtEndOfTabs
          value: "false"
        - key: AlternateMouseScroll
          value: 1

    - name: Configure iTerm2 using PlistBuddy
      ansible.builtin.shell: |
        open --background -a iTerm
        osascript -e 'quit app "iTerm"'
        sleep 10
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Columns"                120'                                    ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Custom Directory"       "Recycle"'                              ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Non Ascii Font"         "MesloLGLNerdFontComplete-Regular 13"'  ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Normal Font"            "MesloLGSNerdFontCompleteM-Regular 13"' ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Option Key Sends"       2'                                      ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Right Option Key Sends" 2'                                      ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Rows"                   33'                                     ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Scrollback Lines"       100000'                                 ~/Library/Preferences/com.googlecode.iterm2.plist
        /usr/libexec/PlistBuddy -c 'Set :"New Bookmarks":0:"Use Non-ASCII Font"     "true"'                                 ~/Library/Preferences/com.googlecode.iterm2.plist
      changed_when: false

- name: Configure Rectangle
  community.general.osx_defaults:
    domain: com.knollsoft.Rectangle
    key: "{{ item.key }}"
    type: bool
    value: "{{ item.value }}"
  loop:
    - key: launchOnLogin
      value: "true"
    - key: hideMenubarIcon
      value: "true"
    - key: SUEnableAutomaticChecks
      value: "false"

- name: Start screensaver after 1 mins
  community.general.osx_defaults:
    host: currentHost
    domain: com.apple.screensaver
    key: idleTime
    type: int
    value: 60
  # For some reason the type=string in GitHub Action MacOS - let's skip it for such env
  tags: skip_test

- name: Check if Aerial config file is present
  ansible.builtin.stat:
    path: ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost
  register: com_johncoates_aerial_plist

- name: Configure Aerial
  when: not com_johncoates_aerial_plist.stat.exists
  block:
    - name: Set Aerial as default screensaver
      ansible.builtin.command: defaults -currentHost write com.apple.screensaver moduleDict -dict moduleName -string "Aerial" path -string "{{ ansible_user_dir }}/Library/Screen Savers/Aerial.saver" type -int 0
      changed_when: false

    - name: Configure Aerial
      community.general.osx_defaults:
        domain: ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost/com.JohnCoates.Aerial.plist
        key: "{{ item.key }}"
        type: "{% if item.type is defined %}{{ item.type }}{% else %}bool{% endif %}"
        value: "{{ item.value }}"
      changed_when: false
      loop:
        - key: enableManagement
          value: "true"
        - key: firstTimeSetup
          value: "true"
        - key: intVideoFormat
          type: int
          value: 1
        - key: timeMode
          type: int
          value: 1
        - key: intOnBatteryMode
          type: int
          value: 1
        - key: debugMode
          value: "false"
        - key: newViewingMode
          type: int
          value: 1
        - key: hideFromTimeMachine
          value: "true"

    - name: Configure Aerial 2
      ansible.builtin.shell: |
        defaults write ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost/com.JohnCoates.Aerial.plist LayerBattery -string "{ \"corner\" : 2, \"disableWhenFull\" : true, \"displays\" : 0, \"fontName\" : \"Helvetica Neue Medium\", \"fontSize\" : 20, \"isEnabled\" : true, \"mode\" : 1}"
        defaults write ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost/com.JohnCoates.Aerial.plist LayerClock -string "{ \"clockFormat\" : 0, \"corner\" : 3, \"displays\" : 0, \"fontName\" : \"Helvetica Neue Medium\", \"fontSize\" : 50, \"hideAmPm\" : false, \"isEnabled\" : true, \"showSeconds\" : false}"
        defaults write ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost/com.JohnCoates.Aerial.plist LayerDate -string "{ \"corner\" : 3, \"displays\" : 0, \"fontName\" : \"Helvetica Neue Thin\", \"fontSize\" : 25, \"format\" : 1, \"isEnabled\" : true, \"withYear\" : true}"
        defaults write ~/Library/Containers/com.apple.ScreenSaver.Engine.legacyScreenSaver/Data/Library/Preferences/ByHost/com.JohnCoates.Aerial.plist LayerLocation -string "{ \"corner\" : 7, \"displays\" : 0, \"fontName\" : \"Helvetica Neue Medium\", \"fontSize\" : 28, \"isEnabled\" : true, \"time\" : 1}"
      changed_when: false

- name: Configure Meld
  community.general.osx_defaults:
    domain: org.gnome.meld
    key: "{{ item.key }}"
    type: "{% if item.type is defined %}{{ item.type }}{% else %}bool{% endif %}"
    value: "{{ item.value }}"
  loop:
    - key: /org/gnome/meld/window-state/is-maximized
      value: "true"
    - key: /org/gnome/meld/indent-width
      type: int
      value: 4
    - key: /org/gnome/meld/highlight-current-line
      value: "true"
    - key: /org/gnome/meld/style-scheme
      type: string
      value: cobalt
    - key: /org/gnome/meld/show-line-numbers
      value: "true"
    - key: /org/gnome/meld/insert-spaces-instead-of-tabs
      value: "true"
    - key: /org/gnome/meld/highlight-syntax
      value: "true"

- name: Create directory for OBS
  ansible.builtin.file:
    path: ~/Library/Application Support/obs-studio/basic/profiles/Untitled
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Configure OBS
  ansible.builtin.copy:
    dest: ~/Library/Application Support/obs-studio/global.ini
    content: |
      [BasicWindow]
      RecordWhenStreaming=true
      SysTrayMinimizeToTray=true

      [General]
      EnableAutoUpdates=false

      [Video]
      FPSCommon=25 PAL
    mode: u=rw,g=r,o=r

- name: Configure OBS default profile
  ansible.builtin.copy:
    dest: ~/Library/Application Support/obs-studio/basic/profiles/Untitled/basic.ini
    content: |
      [AdvOut]
      Encoder=vt_h264_hw

      [Output]
      Mode=Advanced

      [SimpleOutput]
      FileNameWithoutSpace=true
    mode: u=rw,g=r,o=r

- name: Configure AltTab
  community.general.osx_defaults:
    domain: com.lwouis.alt-tab-macos
    key: "{{ item.key }}"
    type: string
    value: "{{ item.value }}"
  loop:
    - key: menubarIcon
      value: 3
    - key: maxScreenUsage
      value: 100
    - key: fadeOutAnimation
      value: "true"
    - key: hideSpaceNumberLabels
      value: "true"
    - key: hideStatusIcons
      value: "true"
    - key: iconSize
      value: 20
    - key: spacesToShow
      value: 1
    - key: updatePolicy
      value: 0
    - key: hideWindowlessApps
      value: "true"

- name: Configure Stats
  community.general.osx_defaults:
    domain: eu.exelban.Stats
    key: "{{ item.key }}"
    type: "{% if item.type is defined %}{{ item.type }}{% else %}bool{% endif %}"
    value: "{{ item.value }}"
  loop:
    - key: CPU_widget
      type: string
      value: line_chart
    - key: CPU_line_chart_label
      value: "false"
    - key: CPU_line_chart_box
      value: "false"
    - key: CPU_line_chart_frame
      value: "true"
    - key: CPU_line_chart_color
      type: string
      value: Based on utilization
    - key: RAM_widget
      type: string
      value: line_chart
    - key: RAM_line_chart_label
      value: "false"
    - key: RAM_line_chart_box
      value: "false"
    - key: RAM_line_chart_frame
      value: "true"
    - key: RAM_line_chart_color
      type: string
      value: Based on pressure
    - key: Disk_widget
      type: string
      value: speed
    - key: Disk_removable
      value: "true"
    - key: Battery_state
      value: "false"
    - key: Network_speed_icon
      type: string
      value: Character
    - key: update-interval
      type: string
      value: Never

- name: Create directory for Colima
  ansible.builtin.file:
    path: ~/.colima/default/
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Configure Colima
  ansible.builtin.copy:
    src: files/Users/myusername/.colima/default/colima.yaml
    dest: ~/.colima/default/colima.yaml
    mode: u=rw,g=r,o=r

################################################
# Interactive (can not be "automated")
################################################
- name: Run Applications which needs some manual tasks (approvals)
  ansible.builtin.command: "{{ item }}"
  changed_when: false
  loop:
    - open -a AltTab
    - open -a "Google Chrome" --args --make-default-browser
    - open -a Rectangle

- name: Interactive
  ansible.builtin.pause:
    prompt: "Manually Approve/Configure all appliations/popups and continue by pressing ENTER"
  tags: interactive

# MacOS will open several windows which needs to be confirmed otherwise it will fail
- name: Allow programs to be started after login
  ansible.builtin.command: osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/{{ item }}.app", hidden:false}'
  changed_when: false
  loop: "{{ login_items_enabled }}"
  tags: interactive

# https://apple.stackexchange.com/questions/285607/always-show-function-keys-on-control-strip-when-using-terminal
- name: Enable function keys for apps
  ansible.builtin.command: defaults write com.apple.touchbar.agent PresentationModePerApp -dict-add {{ item }} 'functionKeys'
  loop: "{{ enable_function_keys_apps }}"
  changed_when: false
